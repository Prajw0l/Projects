/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package student_is;

/**
 *
 * @author prajwol manadhar, ujen manadhar, ashim malla
 */
import javax.swing.table.DefaultTableModel;
import java.io.File;
import java.io.IOException;
import javax.swing.JList;
import java.util.ArrayList;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.util.Arrays;
import javax.swing.JOptionPane;
import java.io.FileReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;



public class Student_GUI extends javax.swing.JFrame {

    // instance Variables declaration
    int g;
    int [] g_Array;
    int count;
    boolean outcome; // here false is the default value.
    boolean reboot = false;
    int add_or_not;
    
    
    /**
     * Creates new form Student_GUI
     */
    
    
    public Student_GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        heading_label = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        info_Panel = new javax.swing.JPanel();
        std_Id_Label = new javax.swing.JLabel();
        std_Id_TextField = new javax.swing.JTextField();
        f_Name_Label = new javax.swing.JLabel();
        l_Name_Label = new javax.swing.JLabel();
        gender_Label = new javax.swing.JLabel();
        over_Fee_Label = new javax.swing.JLabel();
        f_Name_TextField = new javax.swing.JTextField();
        l_Name_TextField = new javax.swing.JTextField();
        male_radio_button = new javax.swing.JRadioButton();
        female_radio_button = new javax.swing.JRadioButton();
        address_ComboBox = new javax.swing.JComboBox<>();
        add_Button = new javax.swing.JButton();
        over_Fee_TextField = new javax.swing.JTextField();
        address_Label = new javax.swing.JLabel();
        search_Panel = new javax.swing.JPanel();
        fee_TextField = new javax.swing.JTextField();
        search_fee_Button = new javax.swing.JButton();
        fee_Label = new javax.swing.JLabel();
        search_Address = new javax.swing.JLabel();
        search_Address_ComboBox = new javax.swing.JComboBox<>();
        search_Address_Button = new javax.swing.JButton();
        sort_Button = new javax.swing.JButton();
        remove_Button = new javax.swing.JButton();
        clear_Button = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        open_MenuItem = new javax.swing.JMenuItem();
        save_MenuItem = new javax.swing.JMenuItem();
        exit_MenuItem = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        User_MenuItem = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        heading_label.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        heading_label.setText("STUDENT INFO SYSTEM");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Ram ", "Thakur", "Male", "15000", "Kathmandu"},
                {"2", "Hari", "KC", "Female", "12000", "Lalitpur"},
                {"3", "Sita", "Pandit", "Female", "32000", "Kathmandu"},
                {"4", "Giita", "Gaida", "Female", "12500", "Bhaktapur"},
                {"5", "Lal ", "Bahadur", "Male", "30000", "Kathmandu"},
                {"6", "Shyam", "Handa", "Male", "15000", "Bhaktapur"},
                {"7", "Gun", "Nepal", "Female", "12500", "Lalitpur"},
                {"8", "Jenish", "limbu", "Male", "13000", "Kathmandu"},
                {"9", "Ganesh", "Malla", "Male", "18000", "Lalitpur"},
                {"10", "Manish", "Bhandari", "Male", "19100", "Lalitpur"},
                {"11", "Abishek", "Thapa", "Male", "12000", "Kathmandu"},
                {"12", "Aakriti", "Basnet", "Female", "65200", "Kathmandu"}
            },
            new String [] {
                "Student ID", "First Name", "Last Name", "Gender", "Over Due Fee", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowGrid(true);
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
        }

        info_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 255), new java.awt.Color(0, 0, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)), "STUDENT INFO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        std_Id_Label.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        std_Id_Label.setText("Student ID:");

        std_Id_TextField.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        std_Id_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                std_Id_TextFieldActionPerformed(evt);
            }
        });

        f_Name_Label.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        f_Name_Label.setText("First Name:");

        l_Name_Label.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        l_Name_Label.setText("Last Name:");

        gender_Label.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        gender_Label.setText("Gender:");

        over_Fee_Label.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        over_Fee_Label.setText("Over Due Fee:");

        f_Name_TextField.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        f_Name_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f_Name_TextFieldActionPerformed(evt);
            }
        });

        l_Name_TextField.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        l_Name_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l_Name_TextFieldActionPerformed(evt);
            }
        });

        buttonGroup1.add(male_radio_button);
        male_radio_button.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        male_radio_button.setText("Male");
        male_radio_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                male_radio_buttonActionPerformed(evt);
            }
        });

        buttonGroup1.add(female_radio_button);
        female_radio_button.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        female_radio_button.setText("Female");
        female_radio_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                female_radio_buttonActionPerformed(evt);
            }
        });

        address_ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select a city--", "Kathmandu", "Lalitpur", "Bhaktapur" }));
        address_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                address_ComboBoxActionPerformed(evt);
            }
        });

        add_Button.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add_Button.setForeground(new java.awt.Color(50, 205, 50));
        add_Button.setText("ADD");
        add_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_ButtonActionPerformed(evt);
            }
        });

        over_Fee_TextField.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        over_Fee_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                over_Fee_TextFieldActionPerformed(evt);
            }
        });

        address_Label.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        address_Label.setText("Address:");

        javax.swing.GroupLayout info_PanelLayout = new javax.swing.GroupLayout(info_Panel);
        info_Panel.setLayout(info_PanelLayout);
        info_PanelLayout.setHorizontalGroup(
            info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, info_PanelLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(info_PanelLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(add_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, info_PanelLayout.createSequentialGroup()
                            .addGroup(info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(std_Id_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(l_Name_Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(f_Name_Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(l_Name_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(std_Id_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(f_Name_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(1, 1, 1))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, info_PanelLayout.createSequentialGroup()
                            .addComponent(address_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(address_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(info_PanelLayout.createSequentialGroup()
                            .addGroup(info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(gender_Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(over_Fee_Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(info_PanelLayout.createSequentialGroup()
                                    .addComponent(male_radio_button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(female_radio_button))
                                .addComponent(over_Fee_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(13, 13, 13))
        );
        info_PanelLayout.setVerticalGroup(
            info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, info_PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(std_Id_Label)
                    .addComponent(std_Id_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(f_Name_Label)
                    .addComponent(f_Name_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_Name_Label)
                    .addComponent(l_Name_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gender_Label)
                    .addComponent(male_radio_button)
                    .addComponent(female_radio_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(over_Fee_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(over_Fee_Label))
                .addGap(11, 11, 11)
                .addGroup(info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(address_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(address_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(add_Button)
                .addContainerGap())
        );

        search_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 51, 51), new java.awt.Color(255, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(51, 51, 51)), "SEARCH", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        fee_TextField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        fee_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fee_TextFieldActionPerformed(evt);
            }
        });

        search_fee_Button.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        search_fee_Button.setText("Search by fee");
        search_fee_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_fee_ButtonActionPerformed(evt);
            }
        });

        fee_Label.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        fee_Label.setText("Fee:");

        search_Address.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        search_Address.setText("Address:");

        search_Address_ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select a city--", "Kathmandu", "Lalitpur", "Bhaktapur" }));
        search_Address_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_Address_ComboBoxActionPerformed(evt);
            }
        });

        search_Address_Button.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        search_Address_Button.setText("Search through address");
        search_Address_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_Address_ButtonActionPerformed(evt);
            }
        });

        sort_Button.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sort_Button.setText("Sort by Overdue Fee");
        sort_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sort_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout search_PanelLayout = new javax.swing.GroupLayout(search_Panel);
        search_Panel.setLayout(search_PanelLayout);
        search_PanelLayout.setHorizontalGroup(
            search_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(search_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(search_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(search_PanelLayout.createSequentialGroup()
                        .addComponent(fee_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(fee_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 65, Short.MAX_VALUE))
                    .addGroup(search_PanelLayout.createSequentialGroup()
                        .addComponent(search_Address)
                        .addGap(18, 18, 18)
                        .addComponent(search_Address_ComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(search_PanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(search_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(search_Address_Button, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(sort_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, search_PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(search_fee_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        search_PanelLayout.setVerticalGroup(
            search_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(search_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(search_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fee_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fee_Label))
                .addGap(12, 12, 12)
                .addComponent(search_fee_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(search_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search_Address_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_Address, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(search_Address_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sort_Button)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        remove_Button.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        remove_Button.setForeground(new java.awt.Color(220, 20, 60));
        remove_Button.setText("REMOVE");
        remove_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove_ButtonActionPerformed(evt);
            }
        });

        clear_Button.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        clear_Button.setText("CLEAR");
        clear_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_ButtonActionPerformed(evt);
            }
        });

        jMenu3.setText("File");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        open_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        open_MenuItem.setText("Open");
        open_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                open_MenuItemActionPerformed(evt);
            }
        });
        jMenu3.add(open_MenuItem);

        save_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        save_MenuItem.setText("Save");
        save_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_MenuItemActionPerformed(evt);
            }
        });
        jMenu3.add(save_MenuItem);

        exit_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_DOWN_MASK));
        exit_MenuItem.setText("Exit");
        exit_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_MenuItemActionPerformed(evt);
            }
        });
        jMenu3.add(exit_MenuItem);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Help");

        User_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        User_MenuItem.setText("User Help");
        User_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                User_MenuItemActionPerformed(evt);
            }
        });
        jMenu4.add(User_MenuItem);

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(info_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(search_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(heading_label)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(clear_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(285, 285, 285))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(remove_Button)
                        .addGap(281, 281, 281))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(heading_label)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(remove_Button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(info_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(search_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clear_Button)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void f_Name_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f_Name_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_f_Name_TextFieldActionPerformed

    private void l_Name_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l_Name_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_l_Name_TextFieldActionPerformed

    private void male_radio_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_male_radio_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_male_radio_buttonActionPerformed

    private void female_radio_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_female_radio_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_female_radio_buttonActionPerformed

    private void over_Fee_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_over_Fee_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_over_Fee_TextFieldActionPerformed

    private void fee_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fee_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fee_TextFieldActionPerformed

    private void search_fee_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_fee_ButtonActionPerformed
        // TODO add your handling code here:
        String[] total_cost;
        int [] rates;
        ArrayList<String> amounts = new ArrayList<String>();
        for(int a=0; a!=jTable1.getRowCount(); a++){
            String w = (String)jTable1.getValueAt(a,4);
            amounts.add(w);
            amounts.remove(null); // Removes Null values from the arraylist
        }
        
        total_cost = amounts.toArray(new String[amounts.size()]); //arraylist is being converted to array only 
        int num = total_cost.length;
        rates = new int [num];
        for(int i=0; i<num; i++){
            rates[i] = Integer.parseInt(total_cost[i]);
        }
        
        SelectionSort ss = new SelectionSort(); //Binary search sorting
        ss.sort(rates); 
        
        
        BinarySearch bs = new BinarySearch(); //Initiation of Binary Search
        if(fee_TextField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Please enter the fee to begin searching.","ERROR",JOptionPane.ERROR_MESSAGE);
        }else{
            String texts = fee_TextField.getText();
            int key = Integer.parseInt(texts);
            int l=rates.length-1;  
            bs.binary(rates,0,l,key);    
            // The sorted values are stored in rates array
            int num1 = rates.length;
            for(int i=0; i<num1; i++){
            }
        
        
            ArrayList<String> data= new ArrayList<String>();
            for(int a=0; a!=jTable1.getRowCount(); a++){
                String w = (String)jTable1.getValueAt(a,4);
                data.add(w);
                data.remove(null); // Null values are removed from ArrayList
            }
        
            total_cost = amounts.toArray(new String[data.size()]); //Arraylist is converted to array only
            int number = total_cost.length;
            g_Array = new int [num];
            for(int i=0; i<num; i++){
                g_Array[i] = Integer.parseInt(total_cost[i]);
            }
        
            String[]names; 
            String[]categories;
            int identifier=0;
            categories=new String[jTable1.getRowCount()];
            names=new String[jTable1.getRowCount()];
        
    //////////////////////////////////////////////////////////////////
        
            String input=fee_TextField.getText();
            for(int a=0;a<jTable1.getRowCount();a++){
            String z = (String) jTable1.getValueAt(a,4);
            if(input.equals(z)){ //comparison
                String Name=(String)jTable1.getValueAt(a,1)+" "+(String)jTable1.getValueAt(a,2);
                names[a]=Name;
                identifier=identifier+1;
                }    
            }
            if(identifier!=0){
                JList list=new JList(names);
                JOptionPane.showMessageDialog(rootPane,list,"Students with the entered overdue fee: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else {
                JOptionPane.showMessageDialog(null, "0 students with the entered overdue fees ", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }                               
    }//GEN-LAST:event_search_fee_ButtonActionPerformed

    private void add_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_ButtonActionPerformed
        // TODO add your handling code here:
        String StudentId = std_Id_TextField.getText();
        String FirstName = f_Name_TextField.getText();
        String LastName = l_Name_TextField.getText();
        String OverDueFee = over_Fee_TextField.getText();
        String Address =" ";
        String Gender = " ";
        if (male_radio_button.isSelected()) {
           Address  = Address + (String) address_ComboBox.getSelectedItem();
        } 
        if (female_radio_button.isSelected()) {
           Address  = Address + (String) address_ComboBox.getSelectedItem();
        }
        if (male_radio_button.isSelected()) {
            Gender = Gender + male_radio_button.getText();
        }
        if (female_radio_button.isSelected()) {
            Gender = Gender + female_radio_button.getText();
        }
        
        int checknum = jTable1.getRowCount();
        for (int numm = 0; numm < checknum; numm++){
            String check =(String)jTable1.getValueAt(numm,0);
            if(check.equals(StudentId)) {
                outcome = true;
                add_or_not = -1;
                JOptionPane.showMessageDialog(rootPane," Value already exists ");   
            }else{
                add_or_not=1;
            }
        }
        
        if (std_Id_TextField.getText().isEmpty() || f_Name_TextField.getText().isEmpty() || l_Name_TextField.getText().isEmpty() || over_Fee_TextField.getText().isEmpty() || 
                Gender.isEmpty() || address_ComboBox.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Enter Values in the Fields");
        }
        else if(add_or_not == 1 && outcome == false && !std_Id_TextField.getText().isEmpty() &&  !f_Name_TextField.getText().isEmpty() &&  !l_Name_TextField.getText().isEmpty() &&  !over_Fee_TextField.getText().isEmpty() &&  !Gender.isEmpty() && address_ComboBox.getSelectedIndex()!= 0){
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            model.addRow(new Object[]{StudentId,FirstName,LastName,Gender,OverDueFee,Address});
            JOptionPane.showMessageDialog(null, "Values Successfully added");
            std_Id_TextField.setText("");
            f_Name_TextField.setText("");
            l_Name_TextField.setText("");
            over_Fee_TextField.setText("");
            address_ComboBox.setSelectedIndex(0);
            buttonGroup1.clearSelection();
        }
        outcome = reboot; // Resetting the boolean value 
    
        
        
    }//GEN-LAST:event_add_ButtonActionPerformed

    private void remove_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remove_ButtonActionPerformed

        // The code here is used for deleting the data saved in the table:
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int selectedRow = jTable1.getSelectedRow();
        System.out.println(selectedRow);
        if(selectedRow != -1){
            int answer = JOptionPane.showConfirmDialog(null, "Do you want to Delete this record?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (answer == JOptionPane.YES_OPTION) {
                model.removeRow(selectedRow);
                JOptionPane.showMessageDialog(null, "Row has been Deleted");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Select a record for removing");
        }
    }//GEN-LAST:event_remove_ButtonActionPerformed

    private void search_Address_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_Address_ButtonActionPerformed
       // codes for the event to occur after the search by address button is pressed:
       String[]addresses; // a string array is created.  
        int counter = 0; // counter is initialized to 0
        addresses = new String[jTable1.getRowCount()]; 
        String Student_address = (String)search_Address_ComboBox.getSelectedItem(); 
        for(int a = 0;a < jTable1.getRowCount();a++){
            if( Student_address.equals((String) jTable1.getValueAt(a,5))){ //value selected int the combo box is compared to the row.
                String Name=(String)jTable1.getValueAt(a,1)+" "+(String)jTable1.getValueAt(a,2);
                addresses[a] = Name; // names of the students from the table are retrieved and then inserted into the array address.
                counter = counter+1;
            }    
        }
        if(counter!=0){
            JList list=new JList(addresses);
            JOptionPane.showMessageDialog(rootPane,list,"Students living in the entered address: ",JOptionPane.INFORMATION_MESSAGE);
        }
        else {
            JOptionPane.showMessageDialog(null, "No Students live in the entered address: ", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_search_Address_ButtonActionPerformed

    private void sort_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sort_ButtonActionPerformed
        // TODO add your handling code here:
        String[] total_cost;
        int [] rates;
        ArrayList<String> amounts = new ArrayList<String>();
        for(int a=0; a!=jTable1.getRowCount(); a++){
            String w = (String)jTable1.getValueAt(a,4);
            amounts.add(w);
            amounts.remove(null); // ArrayLists has the null values removed
        }
        
        total_cost = amounts.toArray(new String[amounts.size()]); //Arraylist has been converted to array only 
        int num = total_cost.length;
        rates = new int [num];
        for(int i=0; i<num; i++){
            rates[i] = Integer.parseInt(total_cost[i]);
        }
        
        SelectionSort ss = new SelectionSort();
        ss.sort(rates);
        JOptionPane.showMessageDialog(null, "Array for Overdue fee before the Sorting Process is: "
                + "\n"+ Arrays.toString(total_cost));
        JOptionPane.showMessageDialog(null, "Sorted Array for Overdue fee is: "
                + "\n"+ Arrays.toString(rates) );
    }//GEN-LAST:event_sort_ButtonActionPerformed

    private void clear_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_ButtonActionPerformed
        // for clearing all the fields:
        std_Id_TextField.setText("");
        f_Name_TextField.setText("");
        l_Name_TextField.setText("");
        over_Fee_TextField.setText("");
        fee_TextField.setText("");
        address_ComboBox.setSelectedIndex(0);
        search_Address_ComboBox.setSelectedIndex(0);
        buttonGroup1.clearSelection();

        
    }//GEN-LAST:event_clear_ButtonActionPerformed

    private void std_Id_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_std_Id_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_std_Id_TextFieldActionPerformed

    private void open_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_open_MenuItemActionPerformed
        // TODO add your handling code here:
     JFileChooser selector = new JFileChooser();
        selector.setCurrentDirectory(new File("."));
        int reply = selector.showOpenDialog(null);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        if (reply == JFileChooser.APPROVE_OPTION) {
            File file = new File(selector.getSelectedFile().getAbsolutePath());
            try {
                BufferedReader br = new BufferedReader(new FileReader(file));
                Object[] row = br.lines().toArray();
                for (int i = 0; i < row.length; i++) {
                    String line = row[i].toString().trim();
                    String[] data = line.split(",");
                    model.addRow(data);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Student_GUI.class.getName()).log(Level.SEVERE, null, ex);
            }

        }  
    }//GEN-LAST:event_open_MenuItemActionPerformed

    private void address_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_address_ComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_address_ComboBoxActionPerformed

    private void search_Address_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_Address_ComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_Address_ComboBoxActionPerformed

    private void exit_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_MenuItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exit_MenuItemActionPerformed

    private void User_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_User_MenuItemActionPerformed
        // TODO add your handling code here
        JOptionPane.showMessageDialog(null, "You can add and remove values in the table." 
                + "\n" + "You can can search the values according to the price and category."
                +"\n" + "External Data can be imported from the file menu."
                + "\n" +"Program can be exited from the file menu and the exit option.");
    }//GEN-LAST:event_User_MenuItemActionPerformed

    private void save_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_MenuItemActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));
        int reply = chooser.showSaveDialog(null);
        if (reply == JFileChooser.APPROVE_OPTION) {
            File savefile = chooser.getSelectedFile();
            try {
                FileWriter fw = new FileWriter(savefile);
                BufferedWriter bw = new BufferedWriter(fw);
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    for (int j = 0; j < jTable1.getColumnCount(); j++) {
                        bw.write((String) jTable1.getValueAt(i, j) + ",");
                    }
                    bw.newLine();
                }
                bw.close();
                fw.close();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "ERROR", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_save_MenuItemActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu3ActionPerformed

    public class SelectionSort{ //Method for Sorting
    public void sort(int rates[]){
        int num = rates.length;
        
        for (int i = 0; i < num; i++){ // Boundary of unsorted subarray num-1 is moved one by one
        int min_idx = i; // Minimum element if found in unsorted array
        for (int j = i+1; j < num; j++){
            if (rates[j] < rates[min_idx]){
                min_idx = j;
        }
        }
        int temp = rates[min_idx]; // first element is swapped with the found minimum element 
        rates[min_idx] = rates[i]; 
        rates[i] = temp; 
        }
    }
    
    }
    ////////////////////////////////////////////////////////////////////////////
    
    //Method for Binary Search
    public class BinarySearch{ // The index of x is returned if it is present in arr[l..r] otherwise return -1 
        public void binary(int rate[], int f, int l, int key){
             int mid = (f + l)/2;
             while( f <= l ){
                  if ( rate[mid] < key ){
                      f = mid + 1;
                  }else if ( rate[mid] == key ){
                      g = mid;
                      break;
                  }else{
                      l = mid - 1;
                  }
                  mid = (f + l)/2;
             }
             if ( f > l ){
                 System.out.println("The element cannot be found!"); 
             }
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Student_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem User_MenuItem;
    private javax.swing.JButton add_Button;
    private javax.swing.JComboBox<String> address_ComboBox;
    private javax.swing.JLabel address_Label;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clear_Button;
    private javax.swing.JMenuItem exit_MenuItem;
    private javax.swing.JLabel f_Name_Label;
    private javax.swing.JTextField f_Name_TextField;
    private javax.swing.JLabel fee_Label;
    private javax.swing.JTextField fee_TextField;
    private javax.swing.JRadioButton female_radio_button;
    private javax.swing.JLabel gender_Label;
    private javax.swing.JLabel heading_label;
    private javax.swing.JPanel info_Panel;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel l_Name_Label;
    private javax.swing.JTextField l_Name_TextField;
    private javax.swing.JRadioButton male_radio_button;
    private javax.swing.JMenuItem open_MenuItem;
    private javax.swing.JLabel over_Fee_Label;
    private javax.swing.JTextField over_Fee_TextField;
    private javax.swing.JButton remove_Button;
    private javax.swing.JMenuItem save_MenuItem;
    private javax.swing.JLabel search_Address;
    private javax.swing.JButton search_Address_Button;
    private javax.swing.JComboBox<String> search_Address_ComboBox;
    private javax.swing.JPanel search_Panel;
    private javax.swing.JButton search_fee_Button;
    private javax.swing.JButton sort_Button;
    private javax.swing.JLabel std_Id_Label;
    private javax.swing.JTextField std_Id_TextField;
    // End of variables declaration//GEN-END:variables
}
